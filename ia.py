# -*- coding: utf-8 -*-
"""IA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wAPY_ucjdMOrcvkXNkXpekpo8V7tIjXS
"""

import pandas as pd

dados = pd.read_csv('gatosCachorros.csv',
                    sep=';')
dados.info()

from sklearn.preprocessing import OrdinalEncoder
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn import metrics

classes = dados['classe']
features = dados.iloc[:,1:]

from sklearn.preprocessing import OrdinalEncoder
encoder = OrdinalEncoder()

#print(set(dados['cor']))-->cores no dataset
nomes_classes = ['Gato','Cachorro']
tabela_cores = list(set(features['cor']))
features['cor'] = encoder.fit_transform(pd.DataFrame(features['cor']))
features
classes = encoder.fit_transform(pd.DataFrame(classes))


#separar os dados em features e classes e em treino e teste
from sklearn.model_selection import train_test_split

dados_treino,dados_teste,classes_treino,classes_teste = train_test_split(features,
                                                                         classes,
                                                                         test_size=0.4,
                                                                         random_state=9)

#vamos codificar a árvore de decisão
from sklearn.tree import DecisionTreeClassifier

arvore = DecisionTreeClassifier()

#treinar a árvore
arvore.fit(dados_treino,classes_treino)

#testar a árvore
#predicao = arvore.predict(dados_teste)

#entrada de dados
import streamlit as st
st.number_input('Digite o peso do animal:', key='peso')
st.number_input('Digite o tamanho da cauda do animal (em cm):', key='cauda')
st.number_input('Digite o tamanho da orelha do animal (em cm):', key='orelha')
cor = st.selectbox('Escolha a cor do animal:', tabela_cores)

individuo = [st.session_state.peso, st.session_state.cauda, st.session_state.orelha, tabela_cores.index(cor)]

if st.button('Rodar a árvore'):
	predicao = arvore.predict(individuo)
	st.write('O animal previsto pela árvore é: ' +nomes_classes[predicao])
